{"pageProps":{"frontmatter":{"title":"Download Instagram reels by scraping using NodeJS","date":"May 12, 2023","description":"How to use NodeJS to scrape direct video links of Instagram Links using Puppeeteer and Cheerio.","tags":["nodejs","web scraping"],"cover_image":"./graphics/blog-cover/nodejs_puppeteer_reel.png","og_image":"https://artaza.in/graphics/blog-cover/nodejs_puppeteer_reel.png"},"content":"\n## Introduction\n\nToday, we are going to use web scraping in NodeJS to extract direct download links for Instagram Reels Video\n\n## Install Required NPM Packages\n\n**`Puppeteer`** : Puppeterr is a Node.js library which provides a high-level APU to control Chrome/Chromium ( Browser )\n\n**`Cheerio`** : Cheerio is a HTML DOM parser and helps us traverse raw HTML and XML\n\n```bash\nnpm install puppeteer\nnpm install cheerio\n```\n\nFirs, we need get the raw generated HTML, using `Pupperteer` and then parse the HTML using `Cheerio` to extract out the direct download link.\n\n\\\n\\\n**Note**: We are using `Puppeteer` to get the HTML because the video link is hydrated into the page using Javascript. If, we use a simple request to get the raw HTML, the video tag won't be available\n\n## First Step (Get the raw HTML)\n\nThis is how the raw HTML looks likes when we inspect the page\n\n![Instagram Reel Link Page Inspect Image](./graphics/blog-images/download-instagram-reels-by-scraping-using-nodejs/instagramDOM.png \"MarineGEO logo\")\n\nDefine a function that gets the raw HTML, including the `video` tag\n\n```javascript\nasync function getHTML(url) {\n  // Launch a headless browser instance\n  const browser = await puppeteer.launch({ headless: \"new\" });\n\n  // Create a new page\n  const page = await browser.newPage();\n\n  // Navigate to a URL\n  await page.goto(url);\n\n  // Wait for the video tag to appear\n  await page.waitForSelector(\"video\");\n\n  // Get the HTML content\n  const html = await page.content();\n\n  // Close the browser\n  await page.close();\n  await browser.close();\n\n  // Return the HTML content\n  return html;\n}\n```\n\n## Second Step (Parse the raw HTML)\n\nWe are going to parse the raw HTML, that we get from the `getHTML()` function\n\n```javascript\nasync function getReelVideo(url) {\n  const html = await getHTML(url);\n\n  // calls cheerio to process the html received\n  const $ = cheerio.load(html);\n\n  // Searches the html for the video tag and get the src atttribute\n  const videoDirectLink = $(\"video\").attr(\"src\");\n\n  // returns the direct video link\n  return videoDirectLink;\n}\n```\n\n## Last Part\n\nNow we can run the `getReelVideo()` function the get direct download link of a Instagram Reel\n\n```javascript\ngetReelVideo(\"https://www.instagram.com/reel/CrQ9TvAAuRe/\").then((link) =>\n  console.log(link)\n);\n```\n\n**Output:**\n\n`https://instagram.fccu19-1.fna.fbcdn.net/v/t66.30100-16/120641351_1702239160229021_7989127058867652451_n.mp4?_nc_ht=instagram.fccu19-1.fna.fbcdn.net&_nc_cat=105&_nc_ohc=QoyEWM5tB-AAX_8SGz5&edm=AP_V10EBAAAA&ccb=7-5&oh=00_AfAU1hwxYlztdGfqHxpNxyTBDCOzNnLwBw7KnEdj7dLAuw&oe=6463ADB1&_nc_sid=4f375e`\n","slug":"download-instagram-reels-by-scraping-using-nodejs"},"__N_SSG":true}