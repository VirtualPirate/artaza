{"pageProps":{"frontmatter":{"title":"Compile C++ to wasm using CMake","date":"October 10, 2022","description":"As you know useEffect is used in React Components for running code on state changes on states and componenet reloads. But, useEffect() functionis asynchronous which poses problems in some particular situations. But, useLayoutEffect() works like class components life cycle methods which has advantages","tags":["web","c++","wasm"],"cover_image":"./graphics/cmake_wasm.png"},"content":"\n# Introduction\n\nIn this article, we will talk about, how to setup a **CMake** to compile a C++ project to **WebAssembly (.wasm).**\n\n## Installation Prerequisite\n\n- Emscripten [(Click here)](https://emscripten.org/docs/getting_started/downloads.html)\n- CMake [(Click here)](https://cmake.org/download/)\n\n## File Structure\n\n- ðŸ“‚build\n- ðŸ“‚cpp\n- ðŸ“‚generated\n\n## Creating C++ file\n\n```cpp\n// cpp/main.cpp\n\nextern \"C\" {\n\tchar* greet(){\n\t\treturn \"Hello \";\n\t}\n}\n\n```\n\n## Creating the `CMakeLists.txt` file\n\n```cmake\nproject(Wasm) # PROJECT NAME\ncmake_minimum_required(VERSION 3.16.3)\n\nset(CMAKE_RUNTIME_OUTPUT_DIRECTORY \"${CMAKE_SOURCE_DIR}/../generated\")\nset(EXPORTED_FUNCTIONS \"'[_greet]'\") # Putting the greet function we want to export\nset(CMAKE_EXECUTABLE_SUFFIX \".js\")\nset(CMAKE_BUILD_RPATH \"/build\")\nset(CMAKE_CXX_STANDARD 17)\n\ninclude_directories(include)\nfile(GLOB SOURCES src/*.cpp)\nadd_executable(compiled ${SOURCES})\n\nset_target_properties(compiled PROPERTIES LINK_FLAGS \"-O3 -s WASM=0 -s EXPORTED_FUNCTIONS=${EXPORTED_FUNCTIONS}\")\n```\n","slug":"-cpp-to-wasm-using-cmake"},"__N_SSG":true}